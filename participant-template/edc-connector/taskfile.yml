#-------------------------------------------------------------------
# authors     [ Radhouene AZZABI ]
# contacts    [ azzabi.radhouene@cea.fr ]
# created     2024/10-15T12:12:24
# modified    2024/10-15T12:12:24
# version     1.0.0
#-------------------------------------------------------------------

version: "3"


dotenv: ['../.env'] # uncomment if you want to test tasks localy

tasks: 

  start:
    desc: "Start Connector"
    silent: true
    dir: '{{.EDC_CONNECTOR_FOLDER}}'
    cmds: 
      - |
        read -p "Do you want to start Connector ? (yes/no) [no]: " start_connector
        start_connector=${start_connector:-no}

        if [ "$start_connector" = "yes" ]; then

          read -p "Start connector? (consumer/provider) [consumer]: " connector_type
          connector_type=${connector_type:-consumer} 

          if [ "$connector_type" = "consumer" ]; then
            task start-consumer
          elif [ "$connector_type" = "provider" ]; then
            task start-provider
          else
            echo "Invalid connector type. Please enter 'consumer' or 'provider'."
            task start
          fi

        fi
  
  stop:
    desc: "Stop Connector"
    dir: '{{.EDC_CONNECTOR_FOLDER}}'
    cmds:
        - docker compose -p {{.PARTICIPANT_NAME}} down
  
  config:
    desc: "Config Connector"
    dir: '{{.EDC_CONNECTOR_FOLDER}}'
    cmds:
        - envsubst < ./config/connector.properties.tmpl > ./config/connector.properties

  start-consumer:
    desc: "Start Connector Consumer"
    deps:
      - config
    dir: '{{.EDC_CONNECTOR_FOLDER}}'
    cmds:
      - sed -i '/^eu\.datacellar\.openapi\.url/ s/^/#/' ./config/connector.properties
      - docker compose -p {{.PARTICIPANT_NAME}} up -d broker backend --wait
      - docker compose -p {{.PARTICIPANT_NAME}} up -d connector

  start-provider:
    silent: true
    deps:
      - config
    desc: "Start Connector Provider"
    dir: '{{.EDC_CONNECTOR_FOLDER}}'
    cmds:
      - |
       
        read -p "Set open-api spec (http://${PARTICIPANT_NAME}.mock-api:9090/openapi.json): " openapi_url
        openapi_url=${openapi_url:-http://${PARTICIPANT_NAME}.mock-api:9090/openapi.json} 

        
        if [ "$openapi_url" = "http://${PARTICIPANT_NAME}.mock-api:9090/openapi.json" ]; then
          echo "Starting mock API..."
          docker compose -p {{.PARTICIPANT_NAME}} up -d mock-api --wait
        else
          echo "Replacing OpenAPI URL in connector.properties..."
          sed -i 's|eu.datacellar.openapi.url=http://'"${PARTICIPANT_NAME}"'.mock-api:9090/openapi.json|eu.datacellar.openapi.url='"${openapi_url}"'|' ./config/connector.properties
        fi

        echo "Starting the connector..."
        docker compose -p {{.PARTICIPANT_NAME}} up connector



  run-examples:
    desc: Runs the Consumer Pull/Push example script from the consumer
    deps:
      - start-consumer
    dir: '{{.EDC_CONNECTOR_FOLDER}}'
    cmds:
      - |
       
        read -p "Run examples (pull/push/catalogue) [catalogue]: " consumer_example
        consumer_example=${consumer_example:-catalogue} 

        read -p "Set COUNTER_PARTY_PROTOCOL_URL (https://provider.datacellar.cosypoc.ovh/protocol): " counter_party
        counter_party=${counter_party:-https://provider.datacellar.cosypoc.ovh/protocol} 

        export COUNTER_PARTY_PROTOCOL_URL=$counter_party

        if [ "$consumer_example" = "pull" ]; then
          docker exec -it {{.PARTICIPANT_NAME}}.connector-example \
          bash -c "python3 /opt/src/example/example_pull.py"
        fi
        
        if [ "$consumer_example" = "push" ]; then
          docker exec -it {{.PARTICIPANT_NAME}}.connector-example \
          bash -c "python3 /opt/src/example/example_push.py"
        fi

        if [ "$consumer_example" = "catalogue" ]; then
          docker exec -it {{.PARTICIPANT_NAME}}.connector-example \
          bash -c "COUNTER_PARTY_PROTOCOL_URL=$counter_party python3 /opt/src/example/example_catalogue.py"
        fi

