#-------------------------------------------------------------------
# authors     [ Radhouene AZZABI ]
# contacts    [ azzabi.radhouene@cea.fr ]
# created     2024/10-15T12:12:24
# modified    2024/10-15T12:12:24
# version     1.0.0
#-------------------------------------------------------------------

version: "3"


#dotenv: ['../.env'] # uncomment if you want to test tasks localy

tasks:
  
  # Credentials Manager API
  start-api:
    desc: "Start Credentials Manager API"
    dir: '{{.CREDENTIALS_MANAGER_FOLDER}}'
    preconditions:
      - test -f docker-compose.yml
    cmds:
      - docker compose -p {{.PARTICIPANT_NAME}} up credentials-api --wait
    
  stop:
    desc: "Stop Credentials Manager"
    dir: '{{.CREDENTIALS_MANAGER_FOLDER}}'
    preconditions:
      - test docker-compose.yml
    cmds:
      - docker compose -p {{.PARTICIPANT_NAME}} down
  
  stop-api:
    desc: "Stop Credentials Manager"
    dir: '{{.CREDENTIALS_MANAGER_FOLDER}}'
    preconditions:
      - test docker-compose.yml
    cmds:
      - docker compose -p {{.PARTICIPANT_NAME}} stop credentials-api
  
  provision-wallet:
    silent: true
    desc: "Provision Wallet"
    deps:
      - start-api
    dir: '{{.CREDENTIALS_MANAGER_FOLDER}}'
    preconditions:
      - test -f docker-compose.yml
      - test -f {{.CERT_FOLDER}}/{{.DID_WEB_DOMAIN}}.key
      - test -f {{.CERT_FOLDER}}/{{.DID_WEB_DOMAIN}}.crt
    cmds:
      - |
        echo "Provision Wallet"
        docker exec -it {{.PARTICIPANT_NAME}}.credentials-api \
          bash -c "python3 provision_wallet.py"

  create-legalparticipant:
    desc: 'Create a legal participant with provided legalname, vatid, and country_subdivision_code'
    deps:
      - start-api
    silent: true 
    dir: '{{.CREDENTIALS_MANAGER_FOLDER}}'
    cmds:
      - |
        read -p "Enter legalName (CEA): " legalname
        legalname=${legalname:-CEA}  # Default to "CEA" if no input is provided
        read -p "Enter VAT ID (FRFR43775685019): " vatid
        vatid=${vatid:-FRFR43775685019}  # Default to "FRFR43775685019" if no input
        read -p "Enter subdivision (FR-OCC): " subdivision
        subdivision=${subdivision:-FR-OCC}  # Default to "FR-OCC" if no input
        echo "Creating legal participant: legalName=$legalname, vatID=$vatid, CountrySubdivisionCode=$subdivision"
        docker exec -it {{.PARTICIPANT_NAME}}.credentials-api \
          bash -c "\
          PARTICIPANT_LEGAL_NAME={{.legalname}} \
          PARTICIPANT_VAT_ID={{.vatid}} \
          PARTICIPANT_COUNTRY_SUBDIVISION_CODE={{.subdivision}} \
          python3 create_legal_participant.py"
  

  # # config-certs:
  # #   vars: 
  # #     DIR_PATH: '{{.USER_WORKING_DIR}}'
  # #     CERTS_PATH: '{{.USER_WORKING_DIR}}/store/certs'
  # #   dir: '{{.DIR_PATH}}'
  # #   dotenv: ['{{.DIR_PATH}}/.env']
  # #   cmds:
  # #     - sudo cp {{.CERTS_PATH}}/{{.DID_WEB_DOMAIN}}/* {{.CREDENTIALS_MANAGER_PATH}}/data/vc/x5u.pem
  # #     - sudo cp {{.CERTS_PATH}}/{{.DID_WEB_DOMAIN}}/{{.DID_WEB_DOMAIN}}.crt {{.CREDENTIALS_MANAGER_PATH}}/data/vc/x5u.pem
  # #     - sudo chown {{.USER}}:{{.USER}} {{.CREDENTIALS_MANAGER_PATH}}/data/vc/x5u.pem
  # #     - curl -s https://letsencrypt.org/certs/isrgrootx1.pem >> {{.CREDENTIALS_MANAGER_PATH}}/data/vc/x5u.pem


  # # Credentials Manager Webui
  # start-webui:
  #   desc: "Start Credentials Manager Webui"
  #   deps:
  #     - config-credentials-manager
  #   vars: 
  #     DIR_PATH: '{{.USER_WORKING_DIR}}/credentials-manager'
  #   dir: '{{.DIR_PATH}}'
  #   dotenv: ['{{.DIR_PATH}}/.env']
  #   preconditions:
  #     - test -f docker-compose.yml
  #   cmds:
  #     - docker compose -p {{.PARTICIPANT_NAME}} up --wait
    
  # stop-webui:
  #   desc: "Stop Credentials Manager Webui"
  #   vars: 
  #     DIR_PATH: '{{.USER_WORKING_DIR}}/credentials-manager'
  #   dir: '{{.DIR_PATH}}'
  #   dotenv: ['{{.DIR_PATH}}/.env']
  #   preconditions:
  #     - test -f docker-compose.yml
  #   cmds:
  #     - docker compose -p {{.PARTICIPANT_NAME}} down
