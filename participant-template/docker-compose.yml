
services:

  wallet:
    image: waltid/wallet-api:${WALTID_IMG_VERSION}
    container_name: ${PARTICIPANT_NAME}.wallet
    restart: unless-stopped
    volumes:
      - ./waltid/config:/waltid-wallet-api/config
      - ./waltid/data:/waltid-wallet-api/data
    # ports:
    #   - 7001:7001
    networks:
      - datacellar
    healthcheck:
      test: curl http://localhost:7001
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  did-server:
    image: nginx
    container_name: ${PARTICIPANT_NAME}.did-server
    restart: unless-stopped
    volumes:
      - ./data/vc:/usr/share/nginx/html/.well-known
    # ports:
    #   - "80:80"
    networks:
        - datacellar

  credendials-api:
    image: datacellar/credentials-api:${CREDENTIALS_API_IMAGE_VERSION}
    build: ./api
    container_name: ${PARTICIPANT_NAME}.credentials-api
    restart: unless-stopped
    volumes:
      - ./api/app:/app
      - ./data/vc:/vc
      - ${CERT_FOLDER}/${DID_WEB_DOMAIN}:/certs:ro
      - ./waltid/data:/waltid
    depends_on:
      - wallet
      - did-server
    # ports:
    #   - 8080:8080
    env_file:
      - .env
    networks:
      - datacellar
    entrypoint: sh -c "sleep infinity"
    #entrypoint: sh -c "pm2 start main.py --name api --interpreter python3 && pm2 logs api"

  edc-connector:
    image: ${EDC_CONNECTOR_IMG}:${EDC_CONNECTOR_IMG_VERSION}
    container_name: ${PARTICIPANT_NAME}.connector
    build:
      context: .
      dockerfile: Dockerfile
      args:
        CLEAN: "${CLEAN:-true}"   
        SSI: "${SSI:-false}"
    restart: unless-stopped      
    environment:
      ORG_GRADLE_PROJECT_useSSI: "${SSI:-false}"
    # ports:
      # - 29191:${EDC_CONNECTOR_API_PORT}
      # - 29192:${EDC_CONNECTOR_CONTROL_PORT}
      # - 29193:${EDC_CONNECTOR_MANAGEMENT_PORT}
      # - 29194:${EDC_CONNECTOR_PROTOCOL_PORT}
      # - 29291:${EDC_CONNECTOR_PUBLIC_PORT}
    volumes:
      - ./certs:/opt/src/certs
      - ./config:/opt/src/config
      - ./connector:/opt/src/connector
    command:
      [
        java,
        -Dedc.fs.config=/opt/src/config/connector.properties,
        -Dedc.keystore=/opt/src/certs/cert.pfx,
        -Dedc.keystore.password=datacellar,
        -Dedc.vault=/opt/src/certs/vault.properties,
        -jar,
        /opt/src/connector/openapi-connector/build/libs/openapi-connector.jar,
      ]
    networks:
      - datacellar


networks:
  datacellar:
    driver: bridge
    name: datacellar_network
    ipam:
     config:
       - subnet: 192.168.0.0/24
         gateway: 192.168.0.1
    driver_opts:
      com.docker.network.bridge.name: br_datacellar