#-------------------------------------------------------------------
# authors     [ Michael Vassiliadis ]
# contacts    [ m.vassiliadis@que-tech.com ]
# created     2025/03-14T10:00:00 
# modified    2025/03-14T10:00:00 
# version     1.0.0
#-------------------------------------------------------------------

version: "3"

# dotenv: ['../.env']

tasks:
  login-ghcr:
    desc: "Login to GHCR"
    dir: '{{.CDE_FOLDER}}'
    cmds:
      - |
        echo "{{.CDE_GHCR_PAT}}" | docker login ghcr.io -u {{.CDE_GHCR_USERNAME}} --password-stdin

  prepare:
    desc: "Load the cde-server Docker image to the engine"
    dir: '{{.CDE_FOLDER}}'
    cmds: 
      - |
        # Start Fuseki service
        docker compose -p {{.PARTICIPANT_NAME}} -f {{.CDE_FOLDER}}/docker-compose.yml up fuseki -d --wait
       
        # Create auth header once
        AUTH_HEADER="Authorization: Basic $(echo -n "{{.CDE_FUSEKI_USER}}:{{.CDE_FUSEKI_PASSWORD}}" | base64)"

        # Check if dataset exists
        echo "Checking if dataset {{.CDE_FUSEKI_DATASET}} exists..."
        DATASET_EXISTS=$(curl -s -X GET \
          -H "$AUTH_HEADER" \
          "http://localhost:3030/$/datasets" | grep -c "{{.CDE_FUSEKI_DATASET}}" || true)

        if [ "$DATASET_EXISTS" -gt 0 ]; then
          echo "Dataset {{.CDE_FUSEKI_DATASET}} already exists, skipping creation"
        else
          echo "Creating dataset {{.CDE_FUSEKI_DATASET}}..."
          # Create the default Fuseki dataset 
          curl -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "$AUTH_HEADER" \
            -d "dbName={{.CDE_FUSEKI_DATASET}}&dbType=tdb2" \
            "http://localhost:3030/$/datasets"
          
          if [ $? -eq 0 ]; then
            echo "Dataset {{.CDE_FUSEKI_DATASET}} created successfully"
          else
            echo "Failed to create dataset {{.CDE_FUSEKI_DATASET}}"
            exit 1
          fi
        fi

        docker compose -p {{.PARTICIPANT_NAME}} -f {{.CDE_FOLDER}}/docker-compose.yml down fuseki
  start:
    desc: "Start the cde-server"
    dir: '{{.CDE_FOLDER}}'
    deps:
      - login-ghcr
      - prepare
    cmds:
      - docker compose -p {{.PARTICIPANT_NAME}} -f {{.CDE_FOLDER}}/docker-compose.yml up -d --wait
  
  stop:
    desc: "Stop the cde-server"
    dir: '{{.CDE_FOLDER}}'
    cmds:
      - docker compose -p {{.PARTICIPANT_NAME}} -f {{.CDE_FOLDER}}/docker-compose.yml  down

  reset:
    desc: "Reset the cde-configuration"
    dir: '{{.CDE_FOLDER}}'
    cmds:
      - >
      - docker compose -p {{.PARTICIPANT_NAME}} -f {{.CDE_FOLDER}}/docker-compose.yml  down
      - docker rm vc-fuseki-1 || true
      - docker volume rm vc_fuseki-data || true

